name: PyInstaller Windows

on:
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install requirements and installer
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Run pyinstaller
        run: |
          python -m PyInstaller main.spec
      - uses: actions/upload-artifact@v2
        with:
          name: main
          path: dist

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Ver 0.${{ github.run_number }}
          body: |
            Release By Action: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: dist/main.exe
           asset_name: MusicDownloadApp_v0.${{ github.run_number }}.exe
           asset_content_type: application/octet-stream
